name: Build and Publish Python Packages

on:
  release:
    types: [published]
#  push:   # Only for testing while publish-to-pypi is commented out
#    branches:
#      - main

env:
  MACOSX_DEPLOYMENT_TARGET: "10.12"
  CIBW_BUILD: "cp310-* cp311-* cp312-*"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ ubuntu-latest, macos-13, macos-14 ]
        python_version: [ "3.10", "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install setuptools
        run: |
          python -m pip install --upgrade pip
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain=stable
          echo "PATH=${PATH}:${HOME}/.cargo/bin" >> "$GITHUB_ENV"
          rustc --version
          python -m pip install build setuptools setuptools-rust
      - name: Build wheels with cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel==2.22.0
          python -m cibuildwheel --output-dir py_dist
#      - name: Build wheels
#        run:
#          python -m build --outdir py_dist
      - name: Store the compiled packages
        uses: actions/upload-artifact@v4
        with:
          name: esat-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: py_dist/

  build_windows_wheel:
    name: Build wheels on windows-latest
    runs-on: windows-latest
    strategy:
      matrix:
        python_version: [ "3.10", "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install setuptools
        run: |
          python -m pip install --upgrade pip
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain=stable
          rustup target add aarch64-pc-windows-msvc i686-pc-windows-msvc x86_64-pc-windows-msvc
          echo "${HOME}/.cargo/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          python -m pip install build setuptools setuptools-rust
#      - name: Build wheels
#        run: python -m build --outdir py_dist
      - name: Build wheels with cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel==2.22.0
          python -m cibuildwheel --output-dir py_dist
      - name: Store the compiled packages
        uses: actions/upload-artifact@v4
        with:
          name: esat-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: py_dist/

# Uncomment the following section if you want to build wheels on all platforms, bugs in windows build
#  build_wheels:
#    name: Build wheels on ${{ matrix.os }}
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-python@v5
#        with:
#          python-version: "3.12"
#      - name: Install cibuildwheel
#        run: python -m pip install cibuildwheel==2.22.0
#      - name: Install setuptools
#        run: |
#            python -m pip install --upgrade pip
#            curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain=stable
#            echo "PATH=${PATH}:${HOME}/.cargo/bin" >> "$GITHUB_ENV"
#            rustc --version
#            python -m pip install build setuptools setuptools-rust
#      - name: Build wheels
#        run: python -m cibuildwheel --output-dir py_dist
#      - name: Store the compiled packages
#        uses: actions/upload-artifact@v4
#        with:
#          name: esat-wheels-${{ matrix.os }}-${{ strategy.job-index }}
#          path: py_dist/

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    needs:
      - build_wheels
      - build_windows_wheel
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/esat
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: esat-wheels-*
          merge-multiple: true
          path: py_dist/
      - name: Publish distribution 📦 to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: py_dist/
          skip-existing: true
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
#    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - build_wheels
      - build_windows_wheel
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/esat
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: esat-wheels-*
          merge-multiple: true
          path: py_dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: py_dist/
